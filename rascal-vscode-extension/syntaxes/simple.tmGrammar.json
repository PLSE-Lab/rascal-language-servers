{
    "scopeName": "source.rascalmpl",
    "patterns": [{ "include": "#expression" }],
    "repository": {
        "expression": {
            "patterns": [
                { 
                    "include": "#keywords" 
                },
                { 
                    "include": "#types" 
                },
                { 
                    "include": "#modifiers" 
                },
                { 
                    "include": "#comments" 
                },
                { 
                    "include": "#specialvariables" 
                },
                { 
                    "include": "#tags" 
                },
                { 
                    "include": "#strings" 
                },
                { 
                    "include": "#concrete" 
                }
            ]
        },
        "strings": {
            "match": "\"([^\"]|\\\")*?\"",
            "name" : "string.quoted.double"
        },
        "concrete": {
            "match": "`([^`]|\\`)*?`",
            "name" : "string.unquoted"
        },
        "specialvariables" : {
            "match": "\\bit\\b",
            "name": "variable.language"
        },
        "keywords": {
            "match": "\\b(import|extend|assert|layout|module|if|while|for|return|case|switch|visit|try|catch|throw|append|insert|fail|break|continue|syntax|lexical|keyword|data|alias|else|when)\\b",
            "name": "keyword.control"
        },
        "types": {
            "match": "\\b(int|rel|set|rat|real|num|list|value|void|datetime|loc|lrel|tuple|map|str)\\b",
            "name": "storage.type"
        },
        "modifiers": {
            "match": "\\b(start|default|public|private|test|bracket|left|right|assoc|non-assoc)\\b",
            "name": "storage.modifier"
        },
        "comments": {
            "patterns": [
                {
                    "name": "comment.line",
                    "begin": "//",
                    "end": "\\n"
                },
                {
                    "name": "comment.block",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "tags": {
            "patterns": [
                {
                    "name": "comment.block.documentation",
                    "begin": "@doc{",
                    "end": "}"
                },
                {
                    "name": "comment.block",
                    "begin": "@[A-Za-z]+{",
                    "end": "}"
                }
            ]
        }
    }
}